<%
  @regions = Region.where(code: [ 0, @robot.campus.region_code ])
  region_code = action == :create ? 0 : @game.region_code
  @round_names = RoundName.where(contest_nth: @robot.contest_nth,
    region_code: region_code)
  @league_array = Array.new(5){ |i| [ ( "A".ord + i ).chr, i ] }
  @game_array = Array.new(31){ |i| ["第"+(i+1).to_s+"試合", i+1] }
  @robots_array = Robot.where(contest_nth: @game.contest_nth).
    where.not(code: [@robot.code]).
      includes(:campus).order("robots.code").map{ |i| [
        i.campus.abbreviation.to_s.ljust(5, "　") +
          i.name.truncate(SHORTENING_LEN),
        i.code
      ] }
    # 下記はGameモデルで自動的に追加されるべき
  @robots_array.push([
    "　"*5 + Game::Constant::NO_OPPONENT.name,
    Game::Constant::NO_OPPONENT.code
  ])
%>
<div class="row">
  <div class="col-lg-12">
  <%= form_for @game, :url=>{:action => action} do |f| %>
    <%
      @next_request_method ||= ''
      if @next_request_method == "PATCH" then
        patch = "<input type=\"hidden\" name=\"_method\" value=\"patch\">"
        concat patch.html_safe
      end
    %>
    <%= render 'shared/error_messages', obj: @game %>
    <%= f.label :contest_nth, "大会回:第#{@game.contest_nth}回" %><br />
    <%= f.hidden_field :contest_nth %>
    <%= f.label :region_code, "地区" %>:
    <%= f.collection_select :region_code, @regions, :code, :name %><br />
    <%= f.label :round, "回戦" %>:
    <%= f.collection_select :round, @round_names, :round, :name %><br />
    <% if @game.contest_nth == 31 %>
      <%# 第31回大会だけ表示させる。 %>
      <%# リクエストパラメータとして第31回大会以外でも存在する。 %>
      <%# 余計なデータをいれたくなければ第31回大会以外ではパラメータから除く処理 %>
      <%# を加えるべきだが、現状はこのままにしておく。 %>
      <%= f.label :league, "予選リーグ" %>:
      <%= f.select :league, @league_array %><br />
    <% end %>
    <%= f.label :game, "試合" %>:
    <%= f.select :game, @game_array %><br />
    <%= f.label :opponent_robot_code, "対戦相手" %>:
    <%= f.select :opponent_robot_code, @robots_array %>
    <br />

    <%= f.label :victory, "勝敗" %>:
    <%
      result = @game.victory.presence || Game.results[:win].to_s
      Game.results.each do |key, value|
        checked = result.to_i == value ? true : false
        concat f.radio_button :victory, value, {checked: checked}
        concat Game.results_i18n[key]
        concat ("&nbsp;"*2).html_safe
      end
    %>
    <br />

    <%# 事由が重なることがあるんだろうか？なければラジオボタンにすべき %>
    <%= f.label :reasons_for_victory, "勝敗事由"%>：
    <%
      checked = @game.reasons_for_victory.presence || []
      Game.reasons.each do |key, value|
        concat f.check_box :reasons_for_victory,
          { multiple: true, checked: checked.include?(value.to_s) },
          value # , nil
        concat Game.reasons_i18n[key]
        concat ("&nbsp;"*2).html_safe
      end
    %>
    <br /><br />
    <%
      # 許可する大会回を一括でapplicaton.rbなどまたはDBで管理するべき
      # case @robot.contest_nth
      # when 1..20, 29, 30 then
    %>
    <div class="enclosure">
      <%= f.label @gd_sym, "試合詳細" %><br />
      詳細が分からないときは「削除」ボタンを押下して省略することができます。<br />
      省略されているときは「追加」ボタンを押下して表示することができます。<br />
      <%= f.nested_fields_for @gd_sym, wrapper_tag: :div do |detail| %>
        <div class="enclosure">
          <div class="replay"></div>
          <%#= render "games/game_details/game_detail" +
            @game.contest_nth.ordinalize, f: detail %>
          <%= render "game_details/form/game_detail" +
            @game.contest_nth.ordinalize, f: detail %>
        </div>
      <% end %>
      <%= f.add_nested_fields_link @gd_sym, '追加', class: 'btn btn-primary',
        role: 'button' %>
    </div><br />
    <br />
    <% # end %>
    <%= f.submit button_label, class: "btn btn-primary",
      data: { disable_with: '処理中・・・' } %><br /><br />
  <% end %>
  </div>
</div>
